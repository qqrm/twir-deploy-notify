name: Send TWIR summary

on:
  schedule:
    - cron: '0 9 * * *'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write

jobs:
  notify:
    runs-on: ubuntu-latest
    env:
      CARGO_TERM_PROGRESS_WHEN: never
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: true

      - name: Download last_sent artifact from previous successful run
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          prev=$(gh run list -w "${{ github.workflow }}" --branch main --status success -L 1 --json databaseId -q '.[0].databaseId' || echo "")
          if [ -n "$prev" ]; then
            gh run download "$prev" -n last-sent --dir . || true
          fi

      - name: Checkout TWIR
        uses: actions/checkout@v4
        with:
          repository: rust-lang/this-week-in-rust
          path: twir

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal

      - name: Send latest post to Telegram
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        run: |
          latest_post=$(ls twir/content/*-this-week-in-rust*.md | sort | tail -n1)
          last_sent=$(cat last_sent.txt 2>/dev/null || echo "")
          if [ "$GITHUB_EVENT_NAME" != "schedule" ] || [ "$latest_post" != "$last_sent" ]; then
            rm -f output_*.md
            cargo run --quiet --bin twir-deploy-notify -- "$latest_post"
            for file in $(ls -v output_*.md 2>/dev/null); do
              text=$(cat "$file")
              resp=$(curl -s -X POST "https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage" \
                -d "chat_id=${TELEGRAM_CHAT_ID}" \
                --data-urlencode "text=$text" \
                -d "parse_mode=MarkdownV2" \
                -d "disable_web_page_preview=true")
              ok=$(echo "$resp" | jq -r '.ok')
              if [ "$ok" != "true" ]; then
                echo "Telegram API error: $resp"
                exit 1
              fi
            done
            echo "$latest_post" > last_sent.txt
          else
            echo "No new release. Skipping Telegram notification."
          fi

      - name: Upload generated posts
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: telegram-posts
          path: output_*.md
          if-no-files-found: ignore

      - name: Upload last_sent artifact
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: last-sent
          path: last_sent.txt
          if-no-files-found: ignore
