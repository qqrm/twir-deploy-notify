name: CI

on:
  push:
    branches: [ main ]
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        toolchain: ["1.88.0", beta, nightly]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo
            target
          key: ${{ runner.os }}-${{ matrix.toolchain }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.toolchain }}-
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
          profile: minimal
      - run: rustup component add --toolchain ${{ matrix.toolchain }} clippy rustfmt
      - run: cargo +${{ matrix.toolchain }} fmt --all -- --check
      - run: cargo +${{ matrix.toolchain }} check --all-targets --all-features
      - run: cargo +${{ matrix.toolchain }} clippy --all-targets --all-features -- -D warnings
      - run: cargo +${{ matrix.toolchain }} test --all-targets --all-features -- --test-threads=$(nproc)
      - run: cargo +${{ matrix.toolchain }} run --bin check-docs

  coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo
            target
          key: ${{ runner.os }}-coverage-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-coverage-
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: "1.88.0"
          profile: minimal
      - run: rustup component add --toolchain 1.88.0 clippy rustfmt
      - run: cargo +1.88.0 install cargo-tarpaulin
      - run: cargo +1.88.0 tarpaulin --out Lcov --output-dir coverage
      - uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage/lcov.info
